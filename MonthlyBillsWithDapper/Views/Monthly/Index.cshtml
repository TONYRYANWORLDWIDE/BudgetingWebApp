@model MonthlyBillsWithDapper.Models.BillsViewModel

<h1>
    Budget
</h1>


<a class="Create" href="javascript:;">Create</a>



<div class="grid-container-balance">
    <span class="DisplayBalance">
        @Html.DisplayFor(m => m.bankBalance.KeyBalance)
    </span>
</div>
&nbsp
<div class="grid-container">
    <div class="grid-item">
        <button class="colorButton" type="button" id="UpcomingBillsButton">Upcoming Bills</button>
    </div>
    <div class="grid-item">
        <button type="button" id="MonthlyBillsButton">Monthly Bills</button>
    </div>
    <div class="grid-item">
        <button type="button" id="WeeklyBillsButton">Weekly Bills</button>
    </div>
    <div class="grid-item">
        <button type="button" id="BringHomeButton">Bring Home Income</button>
    </div>

</div>


<form id="CreateMonthlyBillForm">

     <span class="Bill">Bill:</span>  
     <input type="text" name="Bill" required>

    <span class="Cost">Cost: </span>
    <input type="text" name="Cost" required>

    <span class="Date">Date: </span>
    <input type="text" name="Date" id="Date" required>

    <button type="button" id="submitNewMonthlyBill">Submit</button>
</form>




<table id="MonthlyBillsTable" class="table">
    <thead>
        <tr>
            <th class="TJR_th_Hidden"></th>
            <th>Bill</th>
            <th>Cost</th>
            <th>Day</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var monthlyBills in Model.MonthlyBills)
        {
            <tr>
                <td class="id">
                    @Html.HiddenFor(modelItem => monthlyBills.id, new { htmlAttributes = new { @class = "form-control id" } })
                </td>

                <td class="Bill">
                    @Html.EditorFor(modelItem => monthlyBills.Bill, new { htmlAttributes = new { @class = "form-control Bill" } })
                </td>
                <td class="Cost">
                    @Html.EditorFor(modelItem => monthlyBills.Cost, new { htmlAttributes = new { @class = "form-control Cost" } })
                </td>
                <td class="Date">
                    @Html.EditorFor(modelItem => monthlyBills.Date, new { htmlAttributes = new { @class = "form-control Date" } })
                </td>
                <td>
                    <a class="Update" href="javascript:;">Update</a>
                    <a class="Delete" href="javascript:;">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<table id="BringHomeBillsTable" class="table">
    <thead>
        <tr>
            <th class="TJR_th_Hidden"></th>
            <th>Name</th>
            <th>Amount</th>
            <th>Day Of Week</th>
            <th>Frequency</th>
            <th>Pay Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var bringhome in Model.BringHomes)
        {
            <tr>
                <td class="id">
                    @Html.HiddenFor(modelItem => bringhome.id, new { htmlAttributes = new { @class = "form-control id" } })
                </td>

                <td class="Name">
                    @Html.EditorFor(modelItem => bringhome.Name, new { htmlAttributes = new { @class = "form-control Bill" } })
                </td>
                <td class="amount">
                    @Html.EditorFor(modelItem => bringhome.amount, new { htmlAttributes = new { @class = "form-control Cost" } })
                </td>
                <td class="DayOfWeek">
                    @Html.EditorFor(modelItem => bringhome.DayOfWeek, new { htmlAttributes = new { @class = "form-control Date" } })
                </td>
                <td class="DayOfWeek">
                    @Html.EditorFor(modelItem => bringhome.Frequency, new { htmlAttributes = new { @class = "form-control Date" } })
                </td>
                <td class="DayOfWeek">
                    @Html.EditorFor(modelItem => bringhome.PickOnePayDate, new { htmlAttributes = new { @class = "form-control Date" } })
                </td>
                <td>
                    <a class="Update" href="javascript:;">Update</a>
                </td>
            </tr>


        }

    </tbody>
</table>

<table id="UpcomingBillsTable" class="table">
    <thead>
        <tr>
            <th style="width: 20%;">Name</th>
            <th style="width: 12%;">Date</th>
            <th style="width: 18%;">Day Of Week</th>
            <th>Type</th>
            <th>Amount</th>
            <th>Running Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var upcomingBill in Model.TheUpcomingBills)
        {
            <tr>
                <td>
                    @Html.EditorFor(modelItem => upcomingBill.Name, new { htmlAttributes = new { @class = "form-control Name" } })
                </td>

                <td>
                    @Html.EditorFor(modelItem => upcomingBill.TheDate, new { htmlAttributes = new { @class = "form-control TheDate" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => upcomingBill.DayOfWeek, new { htmlAttributes = new { @class = "form-control DayOfWeek" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => upcomingBill.Type, new { htmlAttributes = new { @class = "form-control Type" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => upcomingBill.Amount, new { htmlAttributes = new { @class = "form-control Type" } })
                </td>
                <td>
                    @Html.EditorFor(modelItem => upcomingBill.RunningTotal, new { htmlAttributes = new { @class = "form-control Type" } })
                </td>
                <td>
                    <a class="Update" href="javascript:;">Update</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<table id="WeeklyBillsTable" class="table">
    <thead>
        <tr>
            <th class="TJR_th_Hidden"></th>
            <th>Bill</th>
            <th>Cost</th>
            <th>Day of Week</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var weeklybill in Model.WeeklyBills)
        {
            <tr>
                <td class="id">
                    @Html.HiddenFor(modelItem => weeklybill.id, new { htmlAttributes = new { @class = "form-control id" } })
                </td>

                <td class="Bill">
                    @Html.EditorFor(modelItem => weeklybill.Bill, new { htmlAttributes = new { @class = "form-control Bill" } })
                </td>
                <td class="Cost">
                    @Html.EditorFor(modelItem => weeklybill.Cost, new { htmlAttributes = new { @class = "form-control Cost" } })
                </td>
                <td class="Date">
                    @Html.EditorFor(modelItem => weeklybill.DayOfWeek, new { htmlAttributes = new { @class = "form-control Date" } })
                </td>
                <td>
                    <a class="Update" href="javascript:;">Update</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script type="text/javascript">

    $("document").ready(function () {

        $("#MonthlyBillsTable").hide();
        $("#WeeklyBillsTable").hide();
        $("#BringHomeBillsTable").hide();


    });


    $("#BringHomeButton").click(function () {
        $("#BringHomeBillsTable").show();
            $("#MonthlyBillsTable").hide();
            $("#WeeklyBillsTable").hide();
            $("#UpcomingBillsTable").hide();
            $(this).addClass("colorButton")
            $("#WeeklyBillsButton").removeClass("colorButton")
            $("#UpcomingBillsButton").removeClass("colorButton")
            $("#MonthlyBillsButton").removeClass("colorButton")
        });


        $("#MonthlyBillsButton").click(function () {
            $("#MonthlyBillsTable").show();
            $("#WeeklyBillsTable").hide();
            $("#UpcomingBillsTable").hide();
            $("#BringHomeBillsTable").hide();
            $(this).addClass("colorButton")
            $("#WeeklyBillsButton").removeClass("colorButton")
            $("#UpcomingBillsButton").removeClass("colorButton")
            $("#BringHomeButton").removeClass("colorButton")
        });

        $("#WeeklyBillsButton").click(function () {
                $("#WeeklyBillsTable").show();
                $("#MonthlyBillsTable").hide();
                $("#BringHomeBillsTable").hide();
                $("#UpcomingBillsTable").hide();
                $(this).addClass("colorButton")
                $("#MonthlyBillsButton").removeClass("colorButton")
                $("#UpcomingBillsButton").removeClass("colorButton")
                $("#BringHomeButton").removeClass("colorButton")
            });


    $("#UpcomingBillsButton").click(function () {


        $.ajax({
            url: '@Url.Action("Index", "Monthly")',
            method: 'Get',
            success: function (response) {


                location.reload();
                },
                error: function () {
                    alert("Sorry, there's been an error.");
                }
        })


                $("#UpcomingBillsTable").show();
                $("#MonthlyBillsTable").hide();
                $("#BringHomeBillsTable").hide();
                $("#WeeklyBillsTable").hide();
                $(this).addClass("colorButton")
                $("#MonthlyBillsButton").removeClass("colorButton")
                $("#WeeklyBillsButton").removeClass("colorButton")
                $("#BringHomeButton").removeClass("colorButton")
            });



    $("#CreateMonthlyBillForm").validate({

        rules: {
            Date: {
                    required: true,
                    range: [1, 31]
            }
        }
    });
    $(".Create").on("click", function () {

        $("#CreateMonthlyBillForm").toggle();

    });

        $("#submitNewMonthlyBill").click(function () {
            var mb = $("form").serializeArray();
            console.log(mb);
            var monthlyBillInsert = {}
            var Bill = mb[0].value;
            monthlyBillInsert.Bill = Bill
            var Cost = mb[1].value;
            monthlyBillInsert.Cost = Cost
            var Date = mb[2].value;
            monthlyBillInsert.Date = Date

            $.ajax({
                url: '@Url.Action("InsertMonthly", "Monthly")',
                method: 'POST',
                data: { monthlyBillInsert: monthlyBillInsert },
                success: function (response) {
                    $("#CreateMonthlyBillForm").trigger("reset");
                    $("#CreateMonthlyBillForm").toggle();
                    alert("submitted");
                },
                error: function () {
                    alert("Sorry, there's been an error.");
                }
            });
        });

    $("body").on("click", "#MonthlyBillsTable .Update", function () {

        var row = $(this).closest("tr");
        var monthlyBill = {}

        var id = row.find(".id").find('input').val();

        monthlyBill.id = id;

        var bill = row.find(".Bill").find('input').val();
        monthlyBill.bill = bill;
        console.log(bill);

        var cost = row.find(".Cost").find('input').val();
        monthlyBill.Cost = cost;
        console.log(cost);

        var date= row.find(".Date").find('input').val();
        monthlyBill.Date = date;
        console.log(date);

            $.ajax({
                url: '@Url.Action("UpdateMonthly", "Monthly")',
                method: 'POST',
                data: { monthlyBill: monthlyBill },
                success: function (response) {

                },
                error: function () {
                    alert("Sorry, there's been an error.");
                }
        });
    });



        $("body").on("click", "#MonthlyBillsTable .Delete", function () {

        var row = $(this).closest("tr");
        //var monthlyBill = {}

        var id = row.find(".id").find('input').val();

            //monthlyBill.id = id;
            console.log(id);



            $.ajax({
                url: '@Url.Action("DeleteMonthly", "Monthly")',
                method: 'POST',
                data: { id: id },
                success: function (response) {

                },
                error: function () {
                    alert("Sorry, there's been an error.");
                }
        });
    });

</script>
