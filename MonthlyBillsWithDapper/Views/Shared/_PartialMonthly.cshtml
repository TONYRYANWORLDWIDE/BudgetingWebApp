@model MonthlyBillsWithDapper.Models.BillsViewModel
@using MonthlyBillsWithDapper.Entity


<a class="CreateMonthly" href="javascript:;">Create</a>


<form id="CreateMonthlyBillForm">

    <div class="grid-container-Monthly">
        @*@Html.ValidationSummary(true, "")*@
        <div class="grid-item">
            <span class="Bill">Bill: </span>
            <input asp-for="@Model.monthlyBill.Bill" class="form-control"/>
            <span asp-validation-for="@Model.monthlyBill.Bill" class="text-danger"></span>
        </div>
        @*@Html.ValidationSummary(true, "")*@
    <div class="grid-item">
        <span class="Cost">Cost: </span>
        <input asp-for="@Model.monthlyBill.Cost" class="form-control" required ="required" />
        <span asp-validation-for="@Model.monthlyBill.Cost" class="text-danger"></span>
    </div>
        <div class="grid-item">
            <span class="Date">Day Of Month: </span>
            @Html.DropDownList("Day Of Month", Enumerable.Range(1, 31).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "Date form-control" })
        </div>
    </div>
    <button type="button" id="submitNewMonthlyBill">Submit</button>
</form>


<table id="MonthlyBillsTable" class="table">
    <thead>
        <tr>
            <th class="TJR_th_Hidden"></th>
            <th>Bill</th>
            <th>Cost</th>
            <th>Day Of Month</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var monthlyBills in Model.MonthlyBills)
        {
        <tr>
            <td class="id">
                @Html.HiddenFor(modelItem => monthlyBills.id, new { htmlAttributes = new { @class = "form-control id" } })
            </td>

            <td class="Bill">
                @Html.EditorFor(modelItem => monthlyBills.Bill, new { htmlAttributes = new { @class = "form-control Bill" } })
            </td>
            <td class="Cost">
                @Html.EditorFor(modelItem => monthlyBills.Cost, new { htmlAttributes = new { @class = "form-control Cost" } })
            </td>
            <td class="Date">
                @Html.EditorFor(modelItem => monthlyBills.Date, new { htmlAttributes = new { @class = "form-control Date" } })
            </td>
            <td>
                <a class="UpdateMonthly" href="javascript:;">Update</a>
                <a class="DeleteMonthly" href="javascript:;">Delete</a>
            </td>
        </tr>
         }
    </tbody>
</table>



<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">

    // $("#CreateMonthlyBillForm").validate({

    //    rules: {
    //        Date: {
    //                required: true,
    //                range: [1, 31]
    //        }
    //    }
    //});
    $(".CreateMonthly").on("click", function () {

        $("#CreateMonthlyBillForm").toggle();

    });


    $('#form').submit(function() {
    if ($.trim($("#email").val()) === "" || $.trim($("#user_name").val()) === "") {
        alert('you did not fill out one of the fields');
        return false;
    }
    });



        $("#submitNewMonthlyBill").click(function () {
            var mb = $("#CreateMonthlyBillForm").serializeArray();
            console.log(mb);
            var monthlyBillInsert = {}
            var Bill = mb[0].value;
            monthlyBillInsert.Bill = Bill
            var Cost = mb[1].value;
            monthlyBillInsert.Cost = Cost
            var Date = mb[2].value;
            console.log(Date);
            monthlyBillInsert.Date = Date
            if (Bill === "" || Cost === "") {
                alert('One of the fields is blank');
                return false;
            }

            if ($("#CreateMonthlyBillForm").valid()) {
                $.ajax({
                    url: '@Url.Action("InsertMonthly", "Monthly")',
                    method: 'POST',
                    data: { monthlyBillInsert: monthlyBillInsert },
                    success: function (response) {
                        $("#CreateMonthlyBillForm").trigger("reset");
                        $("#CreateMonthlyBillForm").toggle();
                        $('#PartialMonthly').html(response);
                    },
                    error: function () {
                        alert("Sorry, there's been an error.");
                    }
                });
            } else {
                alert("Form is not valid");
                return false;
            };
        });

        $(".UpdateMonthly").click(function () {

        var row = $(this).closest("tr");
        var monthlyBill = {}

        var id = row.find(".id").find('input').val();
        monthlyBill.id = id;

        var bill = row.find(".Bill").find('input').val();
        monthlyBill.bill = bill;

        var cost = row.find(".Cost").find('input').val();
        monthlyBill.Cost = cost;

        var date= row.find(".Date").find('input').val();
        monthlyBill.Date = date;

            $.ajax({
                url: '@Url.Action("UpdateMonthly", "Monthly")',
                method: 'POST',
                data: { monthlyBill: monthlyBill },
                success: function (response) {
                    //$('#PartialMonthly').html(response);
                    alert("Updated");
                $.ajax({

                        url : '@Url.Action("PartialMonthly", "Monthly")'
                    })
                },
                error: function () {
                    alert("Sorry, there's been an error.");
                }
            });
        });

    $(".DeleteMonthly").click(function () {

        var row = $(this).closest("tr");
        var id = row.find(".id").find('input').val();
         console.log(id);

            $.ajax({
                url: '@Url.Action("DeleteMonthly", "Monthly")',
                method: 'POST',
                data: { id: id },
                success: function (response) {
                       $('#PartialMonthly').html(response);
                },
                error: function () {
                    alert("Sorry, there's been an error.");
                }
            });
    });

</script>
